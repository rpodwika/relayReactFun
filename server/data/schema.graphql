input AddFeatureInput {
  name: String!
  description: String!
  url: String!
  clientMutationId: String
}

type AddFeaturePayload {
  featureEdge: FeatureEdge
  viewer: User
  clientMutationId: String
}

# Feature integrated in our starter kit
type Feature implements Node {
  # The ID of an object
  id: ID!

  # Name of the feature
  name: String

  # Description of the feature
  description: String

  # Url of the feature
  url: String
}

# A connection to a list of items.
type FeatureConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [FeatureEdge]
}

# An edge in a connection.
type FeatureEdge {
  # The item at the end of the edge
  node: Feature

  # A cursor for use in pagination
  cursor: String!
}

type Mutation {
  addFeature(input: AddFeatureInput!): AddFeaturePayload
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}

type Query {
  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
  viewer: User
  todos: TodoCollection
}

# Todo
type Todo implements Node {
  # The ID of an object
  id: ID!

  # Id of the TODO
  todoId: Int

  # Name of the todo
  name: String

  # Status of the todo
  status: Boolean
}

# List of todos
type TodoCollection implements Node {
  # The ID of an object
  id: ID!

  # List of TODOs
  todos(after: String, first: Int, before: String, last: Int): TodoConnection
}

# A connection to a list of items.
type TodoConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [TodoEdge]
}

# An edge in a connection.
type TodoEdge {
  # The item at the end of the edge
  node: Todo

  # A cursor for use in pagination
  cursor: String!
}

# A person who uses our app
type User implements Node {
  # The ID of an object
  id: ID!

  # Features that I have
  features(after: String, first: Int, before: String, last: Int): FeatureConnection

  # Users's username
  username: String

  # User's website
  website: String
}
